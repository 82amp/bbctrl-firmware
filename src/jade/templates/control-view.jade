script#control-view-template(type="text/x-template")
  #control
    table.axes
      tr
        th.name Axis
        th.position Position
        th.absolute Absolute
        th.offset Offset
        th.actions Actions

      each axis in 'xyzabc'
        tr.axis(:class="{'homed': is_homed('#{axis}'), 'axis-#{axis}': true}",
          v-if="enabled('#{axis}')")
          th.name #{axis}
          td.position {{state.#{axis}w || 0 | fixed 3}}
          td.absolute {{state.#{axis}p || 0 | fixed 3}}
          td.offset {{(state.#{axis}w - state.#{axis}p) || 0 | fixed 3}}
          th.actions
            button.pure-button(:disabled="state.x != 'READY'",
              title="Set {{'#{axis}' | upper}} axis position.",
              @click="show_set_position('#{axis}')")
              .fa.fa-cog

            button.pure-button(:disabled="state.x != 'READY'",
              title="Zero {{'#{axis}' | upper}} axis offset.",
              @click="zero_axis('#{axis}')") &empty;

            button.pure-button(:disabled="state.x != 'READY'",
              title="Home {{'#{axis}' | upper}} axis.",
              @click="home('#{axis}')")
              .fa.fa-home

            message(:show.sync="position_msg['#{axis}']")
              h3(slot="header") Set {{'#{axis}' | upper}} axis position

              div(slot="body")
                .pure-form
                  .pure-control-group
                    label Position
                    input(v-model="axis_position",
                      @keyup.enter="set_position('#{axis}', axis_position)")
                p

              div(slot="footer")
                button.pure-button(@click="position_msg['#{axis}'] = false")
                  | Cancel

                button.pure-button.button-success(
                  @click="set_position('#{axis}', axis_position)") Set

            message(:show.sync="manual_home['#{axis}']")
              h3(slot="header") Manually home {{'#{axis}' | upper}} axis

              div(slot="body")
                p Set axis absolute position.

                .pure-form
                  .pure-control-group
                    label Absolute
                    input(v-model="axis_position",
                      @keyup.enter="set_home('#{axis}', axis_position)")

                p

              div(slot="footer")
                button.pure-button(@click="manual_home['#{axis}'] = false")
                  | Cancel

                button.pure-button.button-success(
                  title="Home {{'#{axis}' | upper}} axis.",
                  @click="set_home('#{axis}', axis_position)") Set

     table.info
      tr
        th State
        td(:class="{attention: highlight_reason()}") {{get_state()}}
        td
      tr
        th Message
        td.reason(:class="{attention: highlight_reason()}") {{get_reason()}}
        td
      tr
        th Feed
        td {{state.f || 0 | fixed 0}}
        td mm/min
      tr
        th Speed
        td {{state.s || 0 | fixed 0}}
        td RPM
      tr
        th Direction
        td {{state.ss || 'Off'}}
        td

    table.info
      tr
        th Velocity
        td {{state.v || 0 | fixed 0}}
        td mm/min
      tr
        th Line
        td {{0 <= state.ln ? state.ln : '-'}}
        td
      tr
        th Tool
        td {{state.t || 0}}
        td
      tr
        th Mist
        td {{state.mist || 'Off'}}
        td
      tr
        th Coolant
        td {{state.coolant || 'Off'}}
        td

    .override(title="Feed rate override.")
      label Feed
      input(type="range", min="0", max="2", step="0.01",
        v-model="feed_override", @change="override_feed")
      span.percent {{feed_override | percent 0}}

    .override(title="Spindle speed override.")
      label Speed
      input(type="range", min="0", max="2", step="0.01",
        v-model="speed_override", @change="override_speed")
      span.percent {{speed_override | percent 0}}


    .toolbar
      button.pure-button(title="Home the machine.", @click="home()",
        :disabled="state.x != 'READY'")
        .fa.fa-home

      button.pure-button(
        title="{{state.x == 'RUNNING' ? 'Pause' : 'Start'}} program.",
        @click="start_pause", :disabled="!file")
        .fa(:class="state.x == 'RUNNING' ? 'fa-pause' : 'fa-play'")

      button.pure-button(title="Stop program.", @click="stop",
        :disabled="state.x == 'READY'")
        .fa.fa-stop

      button.pure-button(title="Pause program at next optional stop (M1).",
        @click="optional_pause")
        .fa.fa-stop-circle-o

      button.pure-button(title="Execute one program step.", @click="step",
        :disabled="(state.x != 'READY' && state.x != 'HOLDING') || !file")
        .fa.fa-step-forward

    .tabs
      input#tab1(type="radio", name="tabs" checked)
      label(for="tab1") Auto

      input#tab2(type="radio", name="tabs")
      label(for="tab2") MDI

      input#tab3(type="radio", name="tabs")
      label(for="tab3") Manual

      input#tab4(type="radio", name="tabs")
      label(for="tab4") Console

      input#tab5(type="radio", name="tabs")
      label(for="tab5") Indicators

      input#tab6(type="radio", name="tabs", @click="load_video")
      label(for="tab6") Video

      section#content1.tab-content
        .toolbar
          button.pure-button(title="Upload a new GCode program.", @click="open",
            :disabled="state.x == 'RUNNING' || state.x == 'STOPPING'")
            .fa.fa-folder-open

          input.gcode-file-input(type="file", @change="upload",
            style="display:none", accept=".nc,.gcode,.gc,.ngc")

          button.pure-button(title="Delete current GCode program.",
            @click="deleteGCode = true", :disabled="!file")
            .fa.fa-trash

          message(:show.sync="deleteGCode")
            h3(slot="header") Delete GCode?
            p(slot="body")
            div(slot="footer")
              button.pure-button(@click="deleteGCode = false") Cancel
              button.pure-button.button-error(@click="deleteAll")
                .fa.fa-trash
                | &nbsp;all
              button.pure-button.button-success(@click="deleteCurrent")
                .fa.fa-trash
                | &nbsp;selected

          select(title="Select previously uploaded GCode programs.",
            v-model="file", @change="load",
            :disabled="state.x == 'RUNNING' || state.x == 'STOPPING'")
            option(v-for="file in files", :value="file") {{file}}

        .gcode(:class="{placeholder: !gcode}")
          span(v-if="!gcode.length") GCode displays here.
          ul
            li(v-for="item in gcode", id="gcode-line-{{$index}}",
               track-by="$index")
              span {{$index + 1}}
              | {{item}}

      section#content2.tab-content
        .mdi.pure-form
          fieldset
            button.pure-button.pure-button-primary(
              title="Manually execute instructions.", @click="submit_mdi") MDI
            input(v-model="mdi", @keyup.enter="submit_mdi")

        .history(:class="{placeholder: !history}")
          span(v-if="!history.length") MDI history displays here.
          ul
            li(v-for="item in history", @click="load_history($index)",
               track-by="$index")
              | {{item}}

      section#content3.tab-content
        .jog
          axis-control(axes="XY", :colors="['red', 'green']",
            :enabled="[enabled('x'), enabled('y')]",
            v-if="enabled('x') || enabled('y')")
          axis-control(axes="AZ", :colors="['orange', 'blue']",
            :enabled="[enabled('a'), enabled('z')]",
            v-if="enabled('a') || enabled('z')")
          axis-control(axes="BC", :colors="['cyan', 'purple']",
            :enabled="[enabled('b'), enabled('c')]",
            v-if="enabled('b') || enabled('c')")

      section#content4.tab-content
        .toolbar
          button.pure-button(title="Clear console.", @click="clear_console")
            .fa.fa-trash

        table.console
          tr
            th Level
            th Location
            th Code
            th Repeat
            th Message

          tr(v-for="msg in console", :class="msg.level || 'info'")
            td {{msg.level || 'info'}}
            td {{msg.where || ''}}
            td {{msg.code  || '0'}}
            td {{msg.repeat}}
            td {{msg.msg}}

      section#content5.tab-content
        component(is="indicators", :state="state")

      section#content6.tab-content
        .video
          img.mjpeg(:src="video_url")
