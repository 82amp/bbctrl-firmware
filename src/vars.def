/******************************************************************************\

                This file is part of the Buildbotics firmware.

                  Copyright (c) 2015 - 2016 Buildbotics LLC
                            All rights reserved.

     This file ("the software") is free software: you can redistribute it
     and/or modify it under the terms of the GNU General Public License,
      version 2 as published by the Free Software Foundation. You should
      have received a copy of the GNU General Public License, version 2
     along with the software. If not, see <http://www.gnu.org/licenses/>.

     The software is distributed in the hope that it will be useful, but
          WITHOUT ANY WARRANTY; without even the implied warranty of
      MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
               Lesser General Public License for more details.

       You should have received a copy of the GNU Lesser General Public
                License along with the software.  If not, see
                       <http://www.gnu.org/licenses/>.

                For information regarding this software email:
                  "Joseph Coffland" <joseph@buildbotics.com>

\******************************************************************************/

#define AXES_LABEL "xyzabcuvw"
#define MOTORS_LABEL "1234"
#define SWITCHES_LABEL "12345678"

// VAR(name,        code, type,  index, settable, default, help)

// Motor
VAR(motor_map,      "ma", uint8_t,  MOTORS, 1, 0, "Motor to axis mapping")
VAR(step_angle,     "sa", float,    MOTORS, 1, 0, "In degrees per full step")
VAR(travel,         "tr", float,    MOTORS, 1, 0, "Travel in mm per revolution")
VAR(microstep,      "mi", uint16_t, MOTORS, 1, 0, "Microsteps per full step")
VAR(polarity,       "po", uint8_t,  MOTORS, 1, 0, "Normal or reversed")

VAR(power_mode,     "pm", uint8_t,  MOTORS, 1, 0, "Motor power mode")
VAR(power_level,    "pl", float,    MOTORS, 1, 0, "Motor current")
VAR(stallguard,     "sg", int8_t,   MOTORS, 1, 0, "StallGuard threshold")
VAR(sg_value,      "sgv", uint16_t, MOTORS, 0, 0, "StallGuard reading")
VAR(status_flags,   "mf", uint8_t,  MOTORS, 0, 0, "Motor status flags")
VAR(status_strings,"mfs", flags_t,  MOTORS, 0, 0, "Motor status strings")

// Axis
VAR(position,        "p", float,    AXES,   0, 0, "Current axis position")
VAR(axis_mode,      "am", uint8_t,  AXES,   1, 0, "Axis mode")
VAR(max_velocity,   "vm", float,    AXES,   1, 0, "Maxium velocity in mm/min")
VAR(max_feedrate,   "fr", float,    AXES,   1, 0, "Maxium feedrate in mm/min")
VAR(max_jerk,       "jm", float,    AXES,   1, 0, "Maxium jerk in mm/min^3")
VAR(junction_dev,   "jd", float,    AXES,   1, 0, "Junction deviation")

VAR(travel_min,     "tn", float,    AXES,   1, 0, "Minimum soft limit")
VAR(travel_max,     "tm", float,    AXES,   1, 0, "Maximum soft limit")
VAR(min_switch,     "sn", uint8_t,  AXES,   1, 0, "Minimum switch's ID")
VAR(max_switch,     "sx", uint8_t,  AXES,   1, 0, "Maximum switch's ID")

VAR(jerk_homing,    "jh", float,    AXES,   1, 0, "Maxium homing jerk")
VAR(search_vel,     "sv", float,    AXES,   1, 0, "Homing search velocity")
VAR(latch_vel,      "lv", float,    AXES,   1, 0, "Homing latch velocity")
VAR(latch_backoff,  "lb", float,    AXES,   1, 0, "Homing latch backof")
VAR(zero_backoff,   "zb", float,    AXES,   1, 0, "Homing zero backof")

// Spindle
VAR(max_spin,       "ss", float,    0,      1, 0, "Maximum spindle speed")
VAR(spindle_type,   "st", uint8_t,  0,      1, 0, "RS485 or PWM")
VAR(spin_min_pulse, "np", float,    0,      1, 0, "Minimum pulse width")
VAR(spin_max_pulse, "mp", float,    0,      1, 0, "Maximum pulse width")
VAR(spin_polarity,  "sp", uint8_t,  0,      1, 0, "Normal or reversed")
VAR(spin_up,        "su", float,    0,      1, 0, "Spin up velocity")
VAR(spin_down,      "sd", float,    0,      1, 0, "Spin down velocity")

// Switches
VAR(switch_type,    "sw", uint8_t,  SWITCHES, 1, 0, "Normally open or closed")

// System
VAR(velocity,       "v",  float,    0,      0, 0, "Current velocity")
VAR(hw_id,          "id", string,   0,      0, 0, "Hardware ID")
