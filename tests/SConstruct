env = Environment(ENV = os.environ)
env.Tool('config', toolpath = [Dir('#/..')])
env.CBLoadTools('compiler cbang'.split(), paths = [Dir('#/..')])
conf = env.CBConfigure()

# Build Info
env.CBLoadTool('build_info')
env.Replace(BUILD_INFO_NS = 'cb::BuildInfo')

# Configure
if not env.GetOption('clean'):
    conf.CBConfig('compiler')
    conf.CBConfig('cbang')
    env.CBDefine('USING_CBANG') # Using CBANG macro namespace

conf.Finish()

# Test
Export('env')
tests = []
for test in Glob('*Tests'):
    tests.append(SConscript(str(test) + '/SConscript'))

test = Command('test', '', './testHarness')
Depends(test, tests)

Default(tests)
Clean(tests, test)
