//-/////////////////////////////////////////////////////////////////////////////
//-                                                                           //
//-              This file is part of the Buildbotics firmware.               //
//-                                                                           //
//-                Copyright (c) 2015 - 2018, Buildbotics LLC                 //
//-                           All rights reserved.                            //
//-                                                                           //
//-   This file ("the software") is free software: you can redistribute it    //
//-   and/or modify it under the terms of the GNU General Public License,     //
//-    version 2 as published by the Free Software Foundation. You should     //
//-    have received a copy of the GNU General Public License, version 2      //
//-   along with the software. If not, see <http://www.gnu.org/licenses/>.    //
//-                                                                           //
//-   The software is distributed in the hope that it will be useful, but     //
//-        WITHOUT ANY WARRANTY; without even the implied warranty of         //
//-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU      //
//-             Lesser General Public License for more details.               //
//-                                                                           //
//-     You should have received a copy of the GNU Lesser General Public      //
//-              License along with the software.  If not, see                //
//-                     <http://www.gnu.org/licenses/>.                       //
//-                                                                           //
//-              For information regarding this software email:               //
//-                "Joseph Coffland" <joseph@buildbotics.com>                 //
//-                                                                           //
//-/////////////////////////////////////////////////////////////////////////////

script#indicators-template(type="text/x-template")
  .indicators
    table.inputs
      tr
        th.header(colspan=7) Inputs
      tr
        th
        th Pin
        th Name
        th.separator
        th
        th Pin
        th Name

      each motor in '0123'
        tr
          td
            .fa(:class="get_class('#{motor}lw')")
          th {{get_min_pin(#{motor})}}
          th Motor #{motor} Min
          th.separator
          td
            .fa(:class="get_class('#{motor}xw')")
          th {{get_max_pin(#{motor})}}
          th Motor #{motor} Max

      tr
        td
          .fa(:class="get_class('ew')")
        th 23
        th EStop
        th.separator
        td
          .fa(:class="get_class('pw')")
        th 22
        th Probe

    table.outputs
      tr
        th.header(colspan=7) Outputs

      tr
        th
        th Pin
        th Name
        th.separator
        th
        th Pin
        th Name

      tr
        td
          .fa(:class="get_class('eos')")
        th 15
        th Tool Enable
        th.separator
        td
          .fa(:class="get_class('1os')")
        th 2
        th Load 1

      tr
        td
          .fa(:class="get_class('dos')")
        th 16
        th Tool Direction
        th.separator
        td
          .fa(:class="get_class('2os')")
        th 1
        th Load 2

      tr
        td {{state['pd'] | percent 0}}
        th 17
        th Tool PWM
        th.separator
        td
          .fa(:class="get_class('fos')")
        th 21
        th Fault

    table.pwr_fault
      tr
        th.header(colspan=5) Power Faults
      tr
        th Under voltage
        td {{state['under_voltage'] ? 'True' : 'False'}}
        th.separator
        th Over voltage
        td {{state['over_voltage'] ? 'True' : 'False'}}
      tr
        th Over current
        td {{state['over_current'] ? 'True' : 'False'}}
        th.separator
        th Sense error
        td {{state['sense_error'] ? 'True' : 'False'}}
      tr
        th Shunt overload
        td {{state['shunt_overload'] ? 'True' : 'False'}}
        th.separator
        th Motor overload
        td {{state['motor_overload'] ? 'True' : 'False'}}
      tr
        th Load 1 shutdown
        td {{state['load1_shutdown'] ? 'True' : 'False'}}
        th.separator
        th Load 2 shutdown
        td {{state['load2_shutdown'] ? 'True' : 'False'}}

    table.measurements
      tr
        th.header(colspan=5) Measurements

      tr
        td {{state['vin'] | fixed 1}} V
        th Input
        th.separator
        td {{state['vout'] | fixed 1}} V
        th Output

      tr
        td {{state['motor'] | fixed 2}} A
        th Motor
        th.separator
        td {{state['temp'] | fixed 0}} â„ƒ
        th Temp

      tr
        td {{state['load1'] | fixed 2}} A
        th Load 1
        th.separator
        td {{state['load2'] | fixed 2}} A
        th Load 2

      tr
        td {{state['1ai'] | percent 0}} A
        th Analog 1
        th.separator
        td {{state['2ai'] | percent 0}} A
        th Analog 2

    table.modbus
      tr
        th.header(colspan=5) Modbus VFD

      tr
        th(colspan=5) {{modbus_status}}

      tr
        td {{state['hz']}} Hz
        th Frequency
        th.separator
        td {{state['hc']}} A
        th Current

      tr
        td {{state['s']}} RPM
        th Speed
        th.separator
        td
        th

    table.legend
      tr
        th.header(colspan=10) Legend

      tr
        td
         .fa.fa-circle.logic-hi
        th Logic Hi

        td
         .fa.fa-circle.logic-lo
        th Logic Lo

        td
         .fa.fa-circle-o.logic-tri
        th Tristated / Disabled

    h2 DB25 breakout box
    img(width=700, src="/images/DB25_breakout_box.png")

    h2 DB25-M2 breakout
    img(width=400, src="/images/DB25-M2_breakout.png")
